#!/usr/bin/python3

# –§—É–Ω–∫—Ü–∏–∏

# –ó–∞–¥–∞–Ω–∏–µ 1. –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ—Ç —Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏.
# –§—É–Ω–∫—Ü–∏—è 1 ‚Äì –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –æ—Ç—Ä–µ–∑–∫–∞ —á–∏—Å–µ–ª –≤—Å–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª—è—Ç—Å—è
# –Ω–∞—Ü–µ–ª–æ –Ω–∞ 3, —Ñ—É–Ω–∫—Ü–∏—è 2 ‚Äì –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –æ—Ç—Ä–µ–∑–∫–∞ —á–∏—Å–µ–ª –≤—Å–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ
# –¥–µ–ª—è—Ç—Å—è –Ω–∞—Ü–µ–ª–æ –Ω–∞ 4, –§—É–Ω–∫—Ü–∏—è 3‚Äì –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –æ—Ç—Ä–µ–∑–∫–∞ —á–∏—Å–µ–ª –≤—Å–µ —á–∏—Å–ª–∞,
# –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª—è—Ç—Å—è –Ω–∞—Ü–µ–ª–æ –Ω–∞ 5

def f1(a,b):
    count=0
    for i in range(a,b+1):
        if not i%3:
            count+=1
    return count

def f2(a,b):
    count=0
    for i in range(a,b+1):
        if not i%4:
            count+=1
    return count

def f3(a,b):
    count=0
    for i in range(a,b+1):
        if not i%5:
            count+=1
    return count

a=3
b=14
print(f1(a,b))
print(f2(a,b))
print(f3(a,b))

# –ó–∞–¥–∞–Ω–∏–µ 2. –û—Å–Ω–æ–≤–Ω–∞—è –≤–µ—Ç–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –Ω–µ —Å—á–∏—Ç–∞—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π, —Å–æ—Å—Ç–æ–∏—Ç –∏–∑
# –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞. –≠—Ç–æ –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ test(). –í –Ω–µ–π –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –≤–≤–æ–¥ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.
# –ï—Å–ª–∏ –æ–Ω–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ, —Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è positive(), —Ç–µ–ª–æ –∫–æ—Ç–æ—Ä–æ–π —Å–æ–¥–µ—Ä–∂–∏—Ç
# –∫–æ–º–∞–Ω–¥—É –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω —Å–ª–æ–≤–∞ "–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ". –ï—Å–ª–∏ —á–∏—Å–ª–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ, —Ç–æ
# –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è negative(), –µ–µ —Ç–µ–ª–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω —Å–ª–æ–≤–∞
# "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ".

def test():
    def positive():
        print("–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ")
    def negative():
        print("–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ")
    dig = int(input("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: "))
    if dig>=0:
        positive()
    else:
        negative()

test()

# –ó–∞–¥–∞–Ω–∏–µ 3. –î–∞–Ω–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ùë¶>1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–æ –ø—Ä–æ—Å—Ç—ã–º.
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ YES, –µ—Å–ª–∏ —á–∏—Å–ª–æ –ø—Ä–æ—Å—Ç–æ–µ –∏ NO, –µ—Å–ª–∏ —á–∏—Å–ª–æ —Å–æ—Å—Ç–∞–≤–Ω–æ–µ.
from math import sqrt

def check_prime(y):
    for i in range(2, int(sqrt(y))+1):
        if not y%i:
            return (False)
    return (True)

y=211
if check_prime(y):
    print("YES")
else:
    print("NO")

# –ó–∞–¥–∞–Ω–∏–µ 4. –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–π —Å–¥–≤–∏–≥ –≤ —Å–ø–∏—Å–∫–µ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ
# —à–∞–≥–æ–≤. –°–¥–≤–∏–≥ —Ç–∞–∫–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–ª—å—Ü–µ–≤—ã–º, —Ç–æ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç, –≤—ã—à–µ–¥—à–∏–π –∑–∞ –ø—Ä–µ–¥–µ–ª—ã
# —Å–ø–∏—Å–∫–∞, –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–ª—è—Ç—å—Å—è —Å –¥—Ä—É–≥–æ–≥–æ –µ–≥–æ –∫–æ–Ω—Ü–∞.
# –î–ª—è —Ä–µ—à–µ–Ω–∏—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ —Å–ø–∏—Å–∫–∞:
# append() - –¥–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞,
# insert() - –≤—Å—Ç–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É,
# pop() - –∏–∑–≤–ª–µ–∫–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç —Å –∫–æ–Ω—Ü–∞ —Å–ø–∏—Å–∫–∞ –∏–ª–∏, –µ—Å–ª–∏ –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –∏–Ω–¥–µ–∫—Å, –ø–æ –∏–Ω–¥–µ–∫—Å—É.

def shift(spisok, steps):
    if steps>=0:
        for i in range(steps):
            spisok.insert(0,spisok.pop())
    else:
        for i in range(abs(steps)):
            spisok.append(spisok.pop(0))

spisok = [1,2,3,4,5,6,7,8,9]
shift(spisok,3)
print(spisok)

# –ó–∞–¥–∞–Ω–∏–µ 5. –î–∞–Ω—ã –¥–≤–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ x –∏ y. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ —Ç–æ—á–∫–∞
# —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ (x,y) –∑–∞—à—Ç—Ä–∏—Ö–æ–≤–∞–Ω–Ω–æ–º—É –∫–≤–∞–¥—Ä–∞—Ç—É (–≤–∫–ª—é—á–∞—è –µ–≥–æ –≥—Ä–∞–Ω–∏—Ü—É).
# –ï—Å–ª–∏ —Ç–æ—á–∫–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∫–≤–∞–¥—Ä–∞—Ç—É, –≤—ã–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ YES, –∏–Ω–∞—á–µ –≤—ã–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ NO.
# –ù–∞ —Ä–∏—Å—É–Ω–∫–µ —Å–µ—Ç–∫–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞ —Å —à–∞–≥–æ–º 1.

def is_in_square(x,y):
    if abs(x)>1 or abs(y)>1:
        print('NO')
    else:
        print('YES')

is_in_square(0.99,-0.99)

# –ó–∞–¥–∞–Ω–∏–µ 6
# –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É –æ–ø–∏—Å–∞–Ω–∏—é.
# –í –æ—Å–Ω–æ–≤–Ω–æ–π –≤–µ—Ç–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è cylinder(), –∫–æ—Ç–æ—Ä–∞—è –≤—ã—á–∏—Å–ª—è–µ—Ç –ø–ª–æ—â–∞–¥—å —Ü–∏–ª–∏–Ω–¥—Ä–∞.
# –í —Ç–µ–ª–µ cylinder –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è circle, –≤—ã—á–∏—Å–ª—è—é—â–∞—è –ø–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞ –ø–æ —Ñ–æ—Ä–º—É–ª–µ œÄr2.
# –í —Ç–µ–ª–µ cylinder —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç—Å—è, —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–ª–æ—â–∞–¥—å
# –±–æ–∫–æ–≤–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ —Ü–∏–ª–∏–Ω–¥—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ 2œÄrh, –∏–ª–∏ –ø–æ–ª–Ω—É—é –ø–ª–æ—â–∞–¥—å —Ü–∏–ª–∏–Ω–¥—Ä–∞.
# –í –ø–æ—Å–ª–µ–¥–Ω–µ–º —Å–ª—É—á–∞–µ –∫ –ø–ª–æ—â–∞–¥–∏ –±–æ–∫–æ–≤–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ —Ü–∏–ª–∏–Ω–¥—Ä–∞ –¥–æ–ª–∂–µ–Ω –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è
# —É–¥–≤–æ–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏–π —Ñ—É–Ω–∫—Ü–∏–∏ circle().

def cylinder():
    r = float(input("–í–≤–µ–¥–∏—Ç–µ r: "))
    h = float(input("–í–≤–µ–¥–∏—Ç–µ h: "))
    answer = int(input("[1]-—Ç–æ–ª—å–∫–æ –ø–ª–æ—â–∞–¥—å –±–æ–∫–æ–≤–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏, [2]-–ø–æ–ª–Ω–∞—è –ø–ª–æ—â–∞–¥—å: "))
    def circle():
        nonlocal r
        nonlocal h
        s = 3.14*r*r
        return s
    res = 2*3.14*r*h
    if answer==1:
        print(res)
    else:
        print(res+2*circle())

cylinder()

# –ó–∞–¥–∞–Ω–∏–µ 7. –î–∞–Ω —Å–ø–∏—Å–æ–∫ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª. –ü–æ—Å—á–∏—Ç–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –Ω–µ–º –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –∫–∞–∂–¥–æ–µ —á–∏—Å–ª–æ.
# –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –¥–∞–Ω —Å–ø–∏—Å–æ–∫ [1, 1, 3, 2, 1, 3, 4], —Ç–æ –≤ –Ω–µ–º —á–∏—Å–ª–æ 1 –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Ç—Ä–∏ —Ä–∞–∑–∞,
# —á–∏—Å–ª–æ 3 - –¥–≤–∞ —Ä–∞–∑–∞, —á–∏—Å–ª–∞ 2 –∏ 4 - –ø–æ –æ–¥–Ω–æ–º—É —Ä–∞–∑—É.

def list_count(spisok):
    uniq=set(spisok)
    for i in uniq:
        print ("–ß–∏—Å–ª–æ", i, "–≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è",spisok.count(i),"—Ä–∞–∑–∞")

spisok = [1, 1, 3, 2, 1, 3, 4]
list_count(spisok)

# –ó–∞–¥–∞–Ω–∏–µ 8. –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–π —Å–¥–≤–∏–≥ –≤ —Å–ø–∏—Å–∫–µ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –Ω–∞
# —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ —à–∞–≥–æ–≤. –°–¥–≤–∏–≥ —Ç–∞–∫–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–æ–ª—å—Ü–µ–≤—ã–º, —Ç–æ –µ—Å—Ç—å
# —ç–ª–µ–º–µ–Ω—Ç, –≤—ã—à–µ–¥—à–∏–π –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —Å–ø–∏—Å–∫–∞, –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–ª—è—Ç—å—Å—è —Å –¥—Ä—É–≥–æ–≥–æ –µ–≥–æ
# –∫–æ–Ω—Ü–∞.

# !!!!!!!!!! —Å–º. –∑–∞–¥–∞–Ω–∏–µ 4

# –ó–∞–¥–∞–Ω–∏–µ 9. –î–∞–Ω—ã –¥–≤–∞ —Å–ø–∏—Å–∫–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –¥–ª–∏–Ω—ã. –ù–∞–ø—Ä–∏–º–µ—Ä
# [5,4,3] –∏ [2,1,3]. –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ—Ç–∏–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø—É—Ç–µ–º
# –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è —Ä–∞–∑–Ω–∏—Ü—ã –º–µ–¥—É —Å–ø–∏—Å–∫–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä [5-2, 4-1, 3-3] –∏—Ç–æ–≥–æ–≤—ã–π
# —Å–ø–∏—Å–æ–∫ [3,3,0]. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–µ—Ç—å–µ–≥–æ —Å–ø–∏—Å–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å
# –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏.
def list_substract(a, b):
    res = []
    for i in range(len(a)):
        res.append(a[i]-b[i])
    return res

a = [5,4,3]
b = [2,1,3]
print(list_substract(a,b))